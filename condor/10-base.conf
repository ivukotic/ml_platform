###############################################################################
# File:        10-base.conf                                                   #
# Description: Basic configuration for the HTCondor host.                     #
###############################################################################
use security:recommended_v9_0
use role:Submit

# The UID_DOMAIN macro is used to decide under which user to run jobs. If the
# $(UID_DOMAIN) on the submitting machine is different than the $(UID_DOMAIN)
# on the machine that runs a job, then HTCondor runs the job as the user
# nobody. 
UID_DOMAIN = af.uchicago.edu
# An arbitrary string that is used to decide if the two machines, a submit
# machine and an execute machine, share a file system. Although this
# configuration variable name contains the word “DOMAIN”, its value is not
# required to be a domain name. It often is a domain name.
FILESYSTEM_DOMAIN = nfs.af.uchicago.edu
# The host name of the machine where the condor_collector is running for your pool.
CONDOR_HOST = head01.af.uchicago.edu
# The host name of the machine where the condor_schedd is running for your
# pool. This is the host that queues submitted jobs. If the host specifies
# SCHEDD_NAME or MASTER_NAME , that name must be included in the form
# name@hostname. In most condor installations, there is a condor_schedd running
# on each host from which jobs are submitted. The default value of SCHEDD_HOST
# is the current host with the optional name included. For most pools, this
# macro is not defined, nor does it need to be defined..
SCHEDD_HOST = head01.af.uchicago.edu

# A boolean value that controls whether HTCondor calls fsync when writing the
# user job and transaction logs. Setting this value to false will disable calls
# to fsync, which can help performance for schedd log writes at the cost of
# some durability of the log contents should there be a power or hardware
# failure. This value is true by default.
CONDOR_FSYNC = False
# This specifies the maximum number of concurrent sub-processes that the
# condor_schedd will spawn to handle queries. In Unix, the default is 3.
SCHEDD_QUERY_WORKERS = 50
# Under Unix, this specifies the maximum number of file descriptors to allow
# the HTCondor daemon to use.  Default is inherited from the environment
SCHEDD_MAX_FILE_DESCRIPTORS=20000
SHARED_PORT_MAX_FILE_DESCRIPTORS=20000
# Undocumented timeout parameters for condor_submit and other tools.
SUBMIT_TIMEOUT_MULTIPLIER = 6
TOOL_TIMEOUT_MULTIPLIER = 10
# Defines the timeout (in seconds) that condor_q uses when trying to connect to
# the condor_schedd. Defaults to 20 seconds.
Q_QUERY_TIMEOUT = 12 * $(TOOL_TIMEOUT_MULTIPLIER)

# This integer value limits the number of jobs any given owner (user) is
# permitted to have within a condor_schedd daemon's queue. A job submission
# fails if it would cause this limit on the number of jobs to be exceeded. The
# default value is 100000.
MAX_JOBS_PER_OWNER = 50000
# An integer representing a limit on the number of condor_shadow processes
# spawned by a given condor_schedd daemon, for all job universes except grid,
# scheduler, and local universe. 
# Under Unix, the maximum default is now 10,000.
MAX_JOBS_RUNNING   = 50000

# This integer-valued macro works together with the JOB_START_COUNT macro to
# throttle job starts. The condor_schedd daemon starts $(JOB_START_COUNT) jobs
# at a time, then delays for $(JOB_START_DELAY) seconds before starting the
# next set of jobs. This delay prevents a sudden, large load on resources
# required by the jobs during their start up phase. The resulting job start
# rate averages as fast as ($(JOB_START_COUNT)/$(JOB_START_DELAY)) jobs/second.
# This setting is defined in terms of seconds and defaults to 0, which means
# jobs will be started as fast as possible.
JOB_START_DELAY = 2
# This macro works together with the JOB_START_DELAY macro to throttle job
# starts. The default and minimum values for this integer configuration
# variable are both 1.
JOB_START_COUNT = 75

# This specifies the maximum number of simultaneous transfers of output files
# from execute machines to the submit machine. The limit applies to all jobs
# submitted from the same condor_schedd. The default is 100. A setting of 0
# means unlimited transfers. 
MAX_CONCURRENT_DOWNLOADS = 400
# This specifies the maximum number of simultaneous transfers of input files
# from the submit machine to execute machines. The limit applies to all jobs
# submitted from the same condor_schedd. The default is 100. A setting of 0
# means unlimited transfers. 
MAX_CONCURRENT_UPLOADS = 400
# The number of seconds after which an aged and queued transfer may be dequeued
# from the transfer queue, as it is presumably hung. Defaults to 7200 seconds,
# which is 120 minutes.
MAX_TRANSFER_QUEUE_AGE = 14400
# This configures throttling of file transfers based on the disk load generated
# by file transfers. The maximum number of concurrent file transfers is
# specified by MAX_CONCURRENT_UPLOADS and MAX_CONCURRENT_DOWNLOADS . Throttling
# will dynamically reduce the level of concurrency further to attempt to
# prevent disk load from exceeding the specified level. Disk load is computed
# as the average number of file transfer processes conducting read/write
# operations at the same time. If only a single number is provided, this serves
# as the upper limit, and the lower limit is set to 90% of the upper limit.
# The default value is 2.0.
FILE_TRANSFER_DISK_LOAD_THROTTLE = 30.0 to 60.0


# The amount of memory in MiB to acquire for a job, if the job does not specify
# how much it needs using the request_memory submit command. The default is
# defined by the expression:
# ifThenElse(MemoryUsage =!= UNDEFINED,MemoryUsage,(ImageSize+1023)/1024)
JOB_DEFAULT_REQUESTMEMORY = ifThenElse(MemoryUsage =!= UNDEFINED, MemoryUsage, 2048)

# Defines the maximum size for the history file, in bytes. It defaults to 20MB. T
MAX_HISTORY_LOG = 1000000000
# When history file rotation is turned on, this controls how many backup files
# there are. It default to 2, which means that there may be up to three history
# files (two backups, plus the history file that is being currently written
# to). 
MAX_HISTORY_ROTATIONS = 10

# Locks
# A boolean value that defaults to False on Unix platforms and True on Windows
# platforms. When True, a user’s job event log will be locked before being
# written to. If False, HTCondor will not lock the file before writing.
ENABLE_USERLOG_LOCKING=True
# A boolean value utilized only for Unix operating systems, that defaults to
# True. This variable is only relevant if ENABLE_USERLOG_LOCKING is True. When
# True, lock files are written to a directory named condorLocks, thereby using
# a local drive to avoid known problems with locking on NFS.
CREATE_LOCKS_ON_LOCAL_DISK=True

# <SUBSYS>_DEBUG: All of the HTCondor daemons can produce different levels of output depending
# on how much information is desired. The various levels of verbosity for a
# given daemon are determined by this macro.
# D_STATS: Enable debug messages relating to the TCP statistics for file transfers. Note
# that the shadow and starter, by default, log these statistics to special log
# files. See SHADOW_STATS_LOGS
SHADOW_DEBUG = D_STATS
# The full path and file name of a file that stores TCP statistics for shadow
# file transfers. (Note that the shadow logs TCP statistics to this file by
# default. Adding D_STATS to the SHADOW_DEBUG value will cause TCP statistics
# to be logged to the normal shadow log file ($(SHADOW_LOG)).) If not defined,
# SHADOW_STATS_LOG defaults to $(LOG)/XferStatsLog. Setting SHADOW_STATS_LOG to
# /dev/null disables logging of shadow TCP file transfer statistics.
SHADOW_STATS_LOG = $(LOG)/XferStatsLog

# MAX_<SUBSYS>_LOG
# Controls the maximum size in bytes or amount of time that a log will be
# allowed to grow. For any log not specified, the default is
# $(MAX_DEFAULT_LOG), which currently defaults to 10 MiB in size.
MAX_SHADOW_LOG = 1 Gb
MAX_SCHEDD_LOG = 1 Gb

# The full path to a mail sending program that uses -s to specify a subject for
# the message. On all platforms, the default shipped with HTCondor should work.
MAIL = /bin/true # The signal-to-noise is too low, so we disable mail.

